package exts.cpf.emp.web;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

import exts.com.web.ExtsAbstractController;
import exts.com.enums.EnumMenuCd;
import exts.com.exception.ValidatorException;
import exts.cpf.dpt.service.CpfDptService;
import exts.cpf.dpt.vo.CpfDptVO;
import exts.cpf.emp.service.CpfBoardEmpService;
import exts.cpf.emp.validator.CpfBoardEmpValidator;
import exts.cpf.emp.vo.CpfBoardEmpVO;
import egovframework.com.utl.fcc.service.NullUtil;
import egovframework.rte.fdl.cmmn.exception.EgovBizException;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;


/**
 * @Class Name : CpfBoardEmpController.java
 * @Description : 사내공고 게시판 Controller
 * @Modification Information
 * 
 * @author
 * @since 2023.02.23
 * @version 1.0
 * @see Copyright (C) by  All right reserved.
 */
@Controller
public class CpfBoardEmpController extends ExtsAbstractController {
	
	protected String getPkg(){return "exts/cpf/emp";}
	
	@Resource(name = "cpfBoardEmpService")
	private CpfBoardEmpService cpfBoardEmpService;
	
	@Resource(name = "cpfDptService")
	private CpfDptService cpfDptService;

	@Resource(name = "cpfBoardEmpValidator")
	private CpfBoardEmpValidator cpfBoardEmpValidator;
	/**
	 * 분기문
	 */
	@RequestMapping(value="/exts/cpf/emp/index.do")
	public String index(
			@ModelAttribute	CpfBoardEmpVO searchVO,
			HttpServletRequest request,
			ModelMap model) throws Exception{

		//공통 처리부		
		if("".equals(NullUtil.nullString(searchVO.getCbeMode())))searchVO.setCbeMode("list");		//기본 list로 포워딩		
		setIndexProcess(EnumMenuCd.SAMPLE, searchVO.getCbeMode());				//분기공통처리
		request.setAttribute(REQUEST_ACTION_URL, "/exts/cpf/emp/index.do");
		
		StringBuilder sb = new StringBuilder("forward:");
		sb.append("/exts/cpf/emp/" + searchVO.getCbeMode() + ".do");
		
		return sb.toString();
	}


	/**
	 * 리스트
	 */
	@RequestMapping(value="/exts/cpf/emp/list.do")
	public String list(
			@ModelAttribute("searchVO")	CpfBoardEmpVO searchVO,
			HttpServletRequest request,
			ModelMap model) throws Exception{
		throwDirect(request);
		
		if("Y".equals(request.getParameter(REQUEST_EXCEL_YN))){
			
			searchVO.setRecordCountPerPage(0);
			model.addAttribute("resultList",cpfBoardEmpService.selectCpfBoardEmpList(searchVO));
			return getResponseExcelView(model, "boardEmp", "사내공고 게시판");
		}else {

			//기본값으로 스프링빈에 설정된 값 로드
			if(searchVO.getPageUnit() == 0)searchVO.setPageUnit(getDefaultPageUnit());
			if(searchVO.getPageSize() == 0)searchVO.setPageSize(getDefaultPageSize());
		
			//총갯수
			int totalRecordCount = cpfBoardEmpService.selectCpfBoardEmpTot(searchVO);

	    	PaginationInfo paginationInfo = new PaginationInfo();
			paginationInfo.setCurrentPageNo(searchVO.getPageIndex());
			paginationInfo.setRecordCountPerPage(searchVO.getPageUnit());
			paginationInfo.setPageSize(searchVO.getPageSize());
	    	paginationInfo.setTotalRecordCount(totalRecordCount);
			
			searchVO.setFirstIndex(paginationInfo.getFirstRecordIndex());
			searchVO.setLastIndex(paginationInfo.getLastRecordIndex());
			searchVO.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());
			
			//전체가져올때
			if(searchVO.getPageUnit() == -1)searchVO.setRecordCountPerPage(0);
			
			model.addAttribute("paginationInfo",paginationInfo);
			model.addAttribute("resultCnt",totalRecordCount);
			model.addAttribute("resultList",cpfBoardEmpService.selectCpfBoardEmpList(searchVO));
		}
		
		
		return "exts/cpf/emp/boardEmpList";
	}

	/**
	 * 보기
	 */
	@RequestMapping(value="/exts/cpf/emp/view.do")
	public String view(
			@ModelAttribute("searchVO")	CpfBoardEmpVO searchVO,
			HttpServletRequest request,
			ModelMap model) throws Exception{
		throwDirect(request);
		
		CpfBoardEmpVO result = cpfBoardEmpService.selectCpfBoardEmp(searchVO);
		//읽기 권한 체크
		if(!cpfBoardEmpService.isViewable(result))throwBizException("com.error.noauth.view");
		
		model.addAttribute("result",result);
		model.addAttribute("isModifiable",cpfBoardEmpService.isModifiable(result));
		return "exts/cpf/emp/boardEmpView";
	}


	/**
	 * 삭제
	 */
	@RequestMapping(value="/exts/cpf/emp/deleteActionJson.do")
	public String deleteActionJson(
			@ModelAttribute("searchVO")	CpfBoardEmpVO searchVO,
			HttpServletRequest request,
			ModelMap model) throws Exception{
		throwDirect(request);
		
		boolean isSuccess = false;
		String msg = "";
		try{
			cpfBoardEmpService.deleteCpfBoardEmp(searchVO);
			isSuccess = true;
		}catch(EgovBizException e){
			msg = e.getMessage();
		}catch(Exception e){
			log.error(e.getMessage());
			msg = "알 수 없는 에러";
		}
		
		return getResponseJsonView(model, isSuccess, msg);
	}


	/**
	 * 추가/수정
	 */
	@RequestMapping(value="/exts/cpf/emp/write.do")
	public String write(
			@ModelAttribute("searchVO")	CpfBoardEmpVO searchVO,  
			HttpServletRequest request,
			ModelMap model) throws Exception{
		throwDirect(request);
		
		/*
		 * TODO:[개발테스트]
		 * 부서목록은 페이지네비와 상관없이 전체를 가져와야 하기때문에 recordCountPerPage값을 0으로 설정하면 모든데이터를 가져올 수 있음
		 * mapper에 selectList if문 확인해볼것
		 */
		CpfDptVO cpfDptVO = new CpfDptVO();
		int firstIndex = NullUtil.nullInt(request.getParameter("firstIndex"));
//		int recordCountPerPage = NullUtil.nullInt(request.getParameter("recordCountPerPage"));
		cpfDptVO.setRecordCountPerPage(0);
		cpfDptVO.setFirstIndex(firstIndex);
        List dpt = cpfDptService.selectCpfDptList(cpfDptVO);
        log.debug("dpt" + dpt );
		
        //TODO:[개발테스트]등록시 부서값이 없다고 alert창이 뜸. (화면에서 부서값이 전달되는지 확인필요)
        //TODO:[개발테스트]수정페이지에 들어갔을때 기존에 선택한 부서로 선택되도록 수정필요
        
		if(!"".equals(NullUtil.nullString(searchVO.getId()))) {
			CpfBoardEmpVO result = cpfBoardEmpService.selectCpfBoardEmp(searchVO);
			//읽기 권한 체크
			if(!cpfBoardEmpService.isViewable(result))throwBizException("com.error.noauth.view");
			model.addAttribute("result",result);
			model.addAttribute("isModifiable",cpfBoardEmpService.isModifiable(result));
		}		
		model.addAttribute("dpt",dpt);
		
		return "exts/cpf/emp/boardEmpWrite";
	}


	/**
	 * 추가 / 수정 처리
	 */
	@RequestMapping(value="/exts/cpf/emp/writeActionJson.do")
	public String writeActionJson(
			@ModelAttribute("searchVO")	CpfBoardEmpVO searchVO,
			BindingResult errors,
			HttpServletRequest request,
			ModelMap model) throws Exception{
		throwDirect(request);
		

		boolean isSuccess = false;
		String msg = "";
		try{
			cpfBoardEmpValidator.validate(searchVO, errors);
			if(errors.hasErrors())throw new ValidatorException("");
						
			cpfBoardEmpService.writeCpfBoardEmp(searchVO);
			
			isSuccess = true;
		}catch(ValidatorException e){
			return getResponseValidatorErrorJsonView(model, errors);
		}catch(EgovBizException e){
			msg = e.getMessage();
		}catch(Exception e){
			log.error(e.getMessage());
			msg = "알 수 없는 에러";
		}
		
		return getResponseJsonView(model, isSuccess, msg);
	}
}
