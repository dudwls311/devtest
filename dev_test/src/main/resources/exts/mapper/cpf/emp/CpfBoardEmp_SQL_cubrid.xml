<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="exts.mapper.cpf.emp.CpfBoardEmp">
		
	<sql id="CpfBoardEmpWhere">
		WHERE
			1 = 1
		<if test='manager != null and !manager.equals("")'>
			AND MANAGER LIKE '%'||#{manager}||'%' 
		</if>
		<if test='position != null and !position.equals("")'>
			AND POSITION_ID = #{positionId}
		</if>
		<if test='deptId != null and !deptId.equals("")'>
			AND DEPT_ID = #{deptId}
		</if>

		
		<if test='searchKeyword != null and !searchKeyword.equals("")'>
			<choose>
				<when test='"0".equals(searchCondition)'>	<!-- 전체 -->
					AND (
						COM_NM LIKE '%'||#{searchKeyword}||'%'
					)
				</when>
				<when test='"1".equals(searchCondition)'>	<!-- 제목 -->
					AND COM_NM LIKE '%'||#{searchKeyword}||'%'
				</when>
				<when test='"2".equals(searchCondition)'>	<!-- 내용 -->
					
				</when>
			</choose>
		</if>
	</sql>
	
	<sql id="CpfBoardEmpWhere2">
	WHERE
			1 = 1
		<if test='manager != null and !manager.equals("")'>
			AND A.MANAGER LIKE '%'||#{manager}||'%' 
		</if>
		<if test='positionId != null and !positionId.equals("")'>
			AND A.POSITION_ID = #{positionId}
		</if>
		<if test='deptId != null and !deptId.equals("")'>
			AND A.DEPT_ID = #{deptId}
		</if>

		
		<if test='searchKeyword != null and !searchKeyword.equals("")'>
			<choose>
				<when test='"0".equals(searchCondition)'>	<!-- 전체 -->
					AND (
						COM_NM LIKE '%'||#{searchKeyword}||'%'
					)
				</when>
				<when test='"1".equals(searchCondition)'>	<!-- 제목 -->
					AND COM_NM LIKE '%'||#{searchKeyword}||'%'
				</when>
				<when test='"2".equals(searchCondition)'>	<!-- 내용 -->
					
				</when>
			</choose>
		</if>
	</sql>
	
	
	<sql id="CpfBoardEmpColumn">
		ID		id		,
		COM_NM		comNm		,
		WRITER		writer		,
		MANAGER		manager		,
		HIT		hit		,
		[POSITION]		[position]		,
		POSITION_ID  positionId ,
		DEPT_ID		deptId	,
		CONTENT        content 
	</sql>
	<sql id="CpfBoardEmpdept">
		A.ID		id		,
		A.COM_NM		comNm		,
		A.WRITER		writer		,
		A.MANAGER		manager		,
		A.HIT		hit		,
		A.[POSITION]		[position]		,
		A.POSITION_ID  positionId ,
		A.DEPT_ID		deptId	,
		A.CONTENT        content , 
	</sql>
	<sql id="CpfBoardEmpTable">
	    TEST_EMP
	</sql>
	<sql id="cpfBoardEmpDeptNm">
	    INNER JOIN TB_DEPT B 
	    ON A.DEPT_ID = B.DEPT_ID 
	</sql>
	<select id="selectList" parameterType="exts.cpf.emp.vo.CpfBoardEmpVO" resultType="exts.cpf.emp.vo.CpfBoardEmpVO">
		SELECT
			<include refid="CpfBoardEmpdept"/>
			B.DEPT_NM deptNm,
			C.POSITION_NM positionNm
		FROM
			<include refid="CpfBoardEmpTable"/> A
			<include refid="cpfBoardEmpDeptNm"/>
			LEFT OUTER JOIN TB_POSITION C 
			ON A.POSITION_ID = C.POSITION_ID
		<include refid="CpfBoardEmpWhere2"/>
		
		    <!-- AND D.DEL_YN = 'N' -->
		
		ORDER BY
			ID DESC
		<if test="recordCountPerPage != 0">
			LIMIT #{firstIndex},#{recordCountPerPage}
		</if>
	</select>
	<select id="selectTot" parameterType="exts.cpf.emp.vo.CpfBoardEmpVO" resultType="Integer">
		SELECT
			COUNT(*) AS TOTAL
		FROM
			<include refid="CpfBoardEmpTable"/>
		<include refid="CpfBoardEmpWhere"/>
	</select>
	<select id="selectMappingList" parameterType="exts.cpf.emp.vo.CpfBoardEmpVO" resultType="exts.cpf.emp.vo.CpfBoardEmpVO">
		SELECT * 
		FROM TB_ATCH_FILE A INNER JOIN TB_FILE_MAPPING B ON A.ATCH_FILE_SN = B.FILE_ID
	</select>
	
	<select id="select" parameterType="exts.cpf.emp.vo.CpfBoardEmpVO" resultType="exts.cpf.emp.vo.CpfBoardEmpVO">
		SELECT
			<include refid="CpfBoardEmpdept"/>
			B.DEPT_NM deptNm,
			C.POSITION_NM positionNm
			<!-- C.FILE_ID fileId,
			D.ORGNL_ATCH_FILE_NM orgnlAtchFileNm,
			D.DEL_YN delYn -->
		FROM
			<include refid="CpfBoardEmpTable"/> A
			<include refid="cpfBoardEmpDeptNm"/>
			LEFT OUTER JOIN TB_POSITION C 
			ON A.POSITION_ID = C.POSITION_ID
			<!-- INNER JOIN TB_FILE_MAPPING C 
			ON A.ID = C.ID
			INNER JOIN TB_ATCH_FILE D
			ON C.FILE_ID = D.ATCH_FILE_SN -->
		WHERE A.ID = #{id}
		  <!-- AND C.FILE_ID = #{fileId} -->
		  <!-- AND D.DEL_YN  = 'N' -->
	</select>
	
	<insert id="insert" parameterType="exts.cpf.emp.vo.CpfBoardEmpVO">
		<selectKey resultType="string" keyProperty="id" order="BEFORE">
			SELECT SEQ_TEST_EMP.NEXTVAL
		</selectKey>
		INSERT INTO TEST_EMP (
			ID		,
			COM_NM		,
			WRITER		,
			MANAGER		,
			HIT		,
			[POSITION]		,
			POSITION_ID     ,
			DEPT_ID      ,
			CONTENT
		) VALUES (
			#{id}		,
			#{comNm}		,
			#{writer}		,
			#{manager}		,
			#{hit}		,
			#{position}		,
			#{positionId}   ,
			#{deptId}	,
			#{content}
		)
	</insert>
	
	<update id="update" parameterType="exts.cpf.emp.vo.CpfBoardEmpVO">
		UPDATE 
			TEST_EMP
		SET
			COM_NM	=	#{comNm}		,
			WRITER	=	#{writer}		,
			MANAGER	=	#{manager}		,
			HIT	=	#{hit}		,
			[POSITION]	=	#{position}		,
			POSITION_ID = #{positionId}  ,
			DEPT_ID	=	#{deptId}   ,
			CONTENT    =    #{content}
		WHERE
			1 = 1
			AND ID = #{id}
	</update>
	
	<update id="updateDelYn" parameterType="exts.cpf.emp.vo.CpfBoardEmpVO">
		UPDATE 
			TB_ATCH_FILE
		SET
			DEL_YN	=  'Y'
		WHERE
			1 = 1
			<!-- AND ID = #{id} -->
			AND ATCH_FILE_SN = #{fileId}
	</update>
	
	<update id="delete" parameterType="exts.cpf.emp.vo.CpfBoardEmpVO">
		DELETE FROM
			TEST_EMP
		WHERE
			1 = 1
			AND ID = #{id}
	</update>	
	<select id="selectId" parameterType="exts.cpf.emp.vo.CpfBoardEmpVO" resultType="exts.cpf.emp.vo.CpfBoardEmpVO">
	    SELECT 
	          MAX(ID) +1 AS ID
	      FROM
	          TEST_EMP
	</select>
	<select id="fileIdList" parameterType="exts.cpf.emp.vo.CpfBoardEmpVO" resultType="exts.cpf.emp.vo.CpfBoardEmpVO">
		SELECT * 
		  FROM TB_ATCH_FILE A 
    INNER JOIN TB_FILE_MAPPING B 
            ON A.ATCH_FILE_SN = B.FILE_ID  
         WHERE B.ID = #{id}
	</select>
</mapper>
